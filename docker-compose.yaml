version: '3.9'
services:
  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
  user-service:
    image: user-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgresSQLConnection=Host=postgres;Port=5432;Database=appdb;Username=appuser;Password=secret
    ports:
      - "6001:7001"
    networks:
      - app-network
    depends_on:
      - postgres
    volumes:
      - ./user-service/UI/wwwroot:/app/wwwroot
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  realtime-service-ts:
    image: realtime-service-ts
    ports:
      - "8081:8080"
    env_file:
      - ./realtime-service-ts/production.env
    networks:
      - app-network
    depends_on:
      - user-service
      - redis
  frontend:
    image: frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    networks:
      - app-network
    depends_on:
      - user-service
      - realtime-service-ts
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres
volumes:
  pgdata:
    driver: local
  pgadmin_data:
    driver: local
  redisdata:
    driver: local
networks:
  app-network:
    driver: bridge